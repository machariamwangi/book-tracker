{"version":3,"sources":["./src/app/models/bookTrackerError.ts","./src/app/core/book-tracker-error-handler.service.ts","./src/app/add-book/add-book.component.html","./src/app/add-book/add-book.component.ts","./src/app/core/http-cache.service.ts","./src/app/app.component.css","./src/app/data.ts","./src/environments/environment.ts","./src/app/edit-book/edit-book.component.ts","./src/app/core/badge.service.ts","./src/app/core/log-response.interceptor.ts","./src/app/dashboard/dashboard.component.html","./src/app/add-reader/add-reader.component.html","./src/app/core/data.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/core/add-header.interceptor.ts","./src/app/app.component.html","./src/app/add-reader/add-reader.component.ts","./src/app/app.module.ts","./src/app/edit-reader/edit-reader.component.html","./src/app/edit-book/edit-book.component.html","./src/app/core/cache.interceptor.ts","./src/app/edit-reader/edit-reader.component.ts","./src/app/core/books-resolver.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class BookTrackerError {\r\n  errorNumber: number;\r\n  message: string;\r\n  friendlyMessage: string;\r\n}","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\n\r\n@Injectable()\r\nexport class BookTrackerErrorHandlerService implements ErrorHandler {\r\n\r\n  handleError(error: any): void {\r\n    let customError: BookTrackerError = new BookTrackerError();\r\n    customError.errorNumber = 200;\r\n    customError.message = (<Error>error).message;\r\n    customError.friendlyMessage = 'An error occurred. Please try again.';\r\n\r\n    console.log(customError);\r\n  }\r\n\r\n  constructor() { }\r\n\r\n}\r\n","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add New Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from 'app/core/data.service';\r\n\r\nimport { Book } from \"app/models/book\";\r\n\r\n@Component({\r\n  selector: 'app-add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styles: []\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveBook(formValues: any): void {\r\n    let newBook: Book = <Book>formValues;\r\n    newBook.bookID = 0;\r\n    console.log(newBook);\r\n    this.dataService.addBook(newBook).subscribe(\r\n      (data: Book ) => console.log(data),\r\n      (error: any) => console.log(error),\r\n      () => console.log(\"Requeste Complted\")\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport  {HttpResponse} from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpCacheService {\n  private requests: any = {};\n\n  constructor() { }\n\n  put (url: string , response : HttpResponse<any>) : void {\n    this.requests[url] = response;\n  }\n\n  get(url: string) : HttpResponse<any> | undefined {\n    return this.requests[url];\n  }\ninvalidateUrl(url: string) : void {\n   this.requests[url] = undefined\n}\ninvalidateCache() : void {\n  this.requests = {}\n}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","import { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\n\r\nexport const allReaders: Reader[] = [\r\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\r\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\r\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\r\n  ];\r\n\r\nexport const allBooks: Book[] = [\r\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\r\n    { bookID: 2, title: 'Winnie-the-Pooh', author: 'A. A. Milne', publicationYear: 1926 },\r\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\r\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\r\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\r\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\r\n];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Book } from 'app/models/book';\r\nimport { DataService } from 'app/core/data.service';\r\nimport { OldBook } from 'app/models/oldBook';\r\n\r\n@Component({\r\n  selector: 'app-edit-book',\r\n  templateUrl: './edit-book.component.html',\r\n  styles: []\r\n})\r\nexport class EditBookComponent implements OnInit {\r\n\r\n  selectedBook: Book;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    let bookID: number = parseInt(this.route.snapshot.params['id']);\r\n   this.dataService.getBookById(bookID).subscribe(\r\n     (data: Book )=>  this.selectedBook = data,\r\n     (error: any) => console.log(\"eror\", error),\r\n     () => console.log('call success')\r\n   );\r\n\r\n   this.dataService.getOldBookById(bookID).subscribe(\r\n     (data: OldBook) => console.log(\"old===>\", data)\r\n   )\r\n  }\r\n\r\n  setMostPopular(): void {\r\n    this.dataService.setMostPopularBook(this.selectedBook);\r\n  }\r\n\r\n  saveChanges(): void {\r\n    this.dataService.updateBook(this.selectedBook).subscribe(\r\n      (data : void) => console.log(data),\r\n      (error: any) => console.log(error),\r\n      () =>  console.log('Update success')\r\n    )\r\n    console.warn('Save changes to book not yet implemented.');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BadgeService {\r\n\r\n  constructor() { }\r\n\r\n  getReaderBadge(minutesRead: number): string {\r\n\r\n    if (minutesRead > 5000) {\r\n      return 'Book Worm';\r\n    }\r\n    else if (minutesRead > 2500) {\r\n      return 'Page Turner';\r\n    }\r\n    else {\r\n      return 'Getting Started';\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpEventType} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LogResponseInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    console.log(`LogResponseInterceptor - ${req.url}`);\r\n\r\n    return next.handle(req)\r\n    .pipe(\r\n      tap(event => {\r\n        if(event.type == HttpEventType.Response) {\r\n          console.log(event.body)\r\n        }\r\n\r\n      })\r\n    )\r\n\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Books</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let book of allBooks'>\\r\\n          <i>{{book.title}}</i>\\r\\n          <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\r\\n          <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let reader of allReaders'>\\r\\n          {{reader.name}}\\r\\n          <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\r\\n          <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport { allBooks, allReaders } from 'app/data';\r\nimport { Reader } from \"app/models/reader\";\r\nimport { Book } from \"app/models/book\";\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\nimport { OldBook } from 'app/models/oldBook';\r\nimport {map, tap, catchError} from 'rxjs/operators'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  mostPopularBook: Book = allBooks[0];\r\n\r\n  setMostPopularBook(popularBook: Book): void {\r\n    this.mostPopularBook = popularBook;\r\n  }\r\n\r\n  getAllReaders(): Reader[] {\r\n    //this.http.get('').subscribe(data =>  console.log(data))\r\n    return allReaders;\r\n  }\r\n\r\n  getReaderById(id: number): Reader {\r\n    return allReaders.find(reader => reader.readerID === id);\r\n  }\r\n\r\n  getAllBooks():Observable<Book[]  | BookTrackerError> {\r\n    console.warn(\"getting all books from the server\")\r\n    return this.http.get<Book[]>('/api/books').pipe(\r\n    catchError(error => this.handleHttpError(error))\r\n    );\r\n   // return allBooks;\r\n  }\r\nprivate handleHttpError(error : HttpErrorResponse): Observable<BookTrackerError> {\r\n let dataError = new BookTrackerError();\r\n dataError.errorNumber = 100;\r\n dataError.message = error.statusText;\r\n dataError.friendlyMessage = \"An error occured Retrieving Data.\";\r\n return throwError(dataError)\r\n}\r\n  getBookById(id: number): Observable<Book> {\r\n    let getHeaders : HttpHeaders = new HttpHeaders({\r\n      'Accept': 'application/json',\r\n    });\r\n    return this.http.get<Book>(`/api/books/${id}`, {\r\n      headers: getHeaders\r\n    });\r\n    //return allBooks.find(book => book.bookID === id);\r\n  }\r\n  getOldBookById(id: number):   Observable<OldBook> {\r\n    return this.http.get<Book>(`/api/books/${id}`)\r\n    .pipe(\r\n      map(b => <OldBook>{\r\n        bookTitle: b.title,\r\n        year: b.publicationYear\r\n      }),\r\n      tap(classicBook => console.log(classicBook))\r\n    );\r\n  }\r\n\r\naddBook(newBook: Book): Observable<Book> {\r\n  return this.http.post<Book>('/api/books', newBook, {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  });\r\n}\r\n\r\nupdateBook(updatedBook: Book): Observable<void> {\r\n  return this.http.put<void>(`/api/books/${updatedBook.bookID  }`, updatedBook, {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  });\r\n}\r\n\r\ndeleteBook(bookId: number) : Observable<void> {\r\n  return this.http.delete<void>(`/api/books/${bookId}`)\r\n}\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\nimport { DataService } from 'app/core/data.service';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styles: []\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  allBooks: Book[];\r\n  allReaders: Reader[];\r\n  mostPopularBook: Book;\r\n\r\n  constructor(private dataService: DataService,\r\n              private title: Title,\r\n              private route: ActivatedRoute\r\n              ) { }\r\n\r\n  ngOnInit() {\r\n    // this.dataService.getAllBooks().subscribe(\r\n    //   (data: Book[]  | BookTrackerError) =>  this.allBooks = <Book[]>data,\r\n    //   (error: any) => console.log(error),\r\n    //   () => console.log('All done getting Books.')\r\n    // );\r\n let resolvedData: Book[] | BookTrackerError = this.route.snapshot.data['resolvedBooks']\r\n\r\n\r\n   if(resolvedData instanceof BookTrackerError) {\r\n     console.log(`Dashboard Component Error: ${resolvedData.friendlyMessage}`)\r\n   }else {\r\n     this.allBooks = resolvedData\r\n   }\r\n\r\n    this.mostPopularBook = this.dataService.mostPopularBook;\r\n\r\n    this.title.setTitle(`Book Tracker`);\r\n  }\r\n\r\n  deleteBook(bookID: number): void {\r\n  this.dataService.deleteBook(bookID).subscribe(\r\n    (data: void) => {\r\n      let index: number = this.allBooks.findIndex(book => book.bookID === bookID);\r\n      this.allBooks.splice(index, 1);\r\n    },\r\n    (error: any) => console.log(error),\r\n    ()=> console.log(\"Transaction Complted\")\r\n  )\r\n    //console.warn(`Delete book not yet implemented (bookID: ${bookID}).`);\r\n  }\r\n\r\n  deleteReader(readerID: number): void {\r\n    console.warn(`Delete reader not yet implemented (readerID: ${readerID}).`);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\n@Injectable()\r\n export class AddHeaderInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n   console.log(`AddHeaderInterceptor - ${req.url}`)\r\n\r\n   let jsonReq : HttpRequest<any> = req.clone({\r\n     setHeaders: {'Content-Type': 'application/json'}\r\n   });\r\n    return next.handle(jsonReq);\r\n\r\n  }\r\n }\r\n","export default \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <!-- Brand and toggle get grouped for better mobile display -->\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\r\\n        </div>\\r\\n\\r\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\r\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\r\\n            </ul>\\r\\n        </div><!-- /.navbar-collapse -->\\r\\n    </div><!-- /.container-fluid -->\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\n\r\n@Component({\r\n  selector: 'app-add-reader',\r\n  templateUrl: './add-reader.component.html',\r\n  styles: []\r\n})\r\nexport class AddReaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveReader(formValues: any): void {\r\n    let newReader: Reader = <Reader>formValues;\r\n    newReader.readerID = 0;\r\n    console.log(newReader);\r\n    console.warn('Save new reader not yet implemented.');\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http'\r\nimport { AddBookComponent } from './add-book/add-book.component';\r\nimport { AddReaderComponent } from './add-reader/add-reader.component';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { EditBookComponent } from './edit-book/edit-book.component';\r\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\r\nimport { BookTrackerErrorHandlerService } from './core/book-tracker-error-handler.service';\r\nimport { AddHeaderInterceptor } from './core/add-header.interceptor';\r\nimport { LogResponseInterceptor } from './core/log-response.interceptor';\r\nimport { CacheInterceptor } from './core/cache.interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    AddBookComponent,\r\n    EditReaderComponent,\r\n    EditBookComponent,\r\n    AddReaderComponent\r\n  ],\r\n  providers: [\r\n    { provide: ErrorHandler, useClass: BookTrackerErrorHandlerService },\r\n    {provide: HTTP_INTERCEPTORS, useClass: AddHeaderInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: LogResponseInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true}\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader && selectedReader.name\\\" name=\\\"name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader && selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader && selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Current Badge</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            {{ currentBadge }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook && selectedBook.title\\\" name=\\\"title\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook && selectedBook.author\\\" name=\\\"author\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook && selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\n\r\nimport {HttpCacheService} from 'app/core/http-cache.service';\r\n\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor  {\r\n  constructor (private cacheService: HttpCacheService) {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n     // pass along non-cacheable requests and invalidate cache\r\n      if(req.method !== 'GET') {\r\n        console.log(`Invalidating Cache: ${req.method} ${req.url}`);\r\n         this.cacheService.invalidateCache();\r\n        return next.handle(req);\r\n      }\r\n\r\n     //attemp to retrieve a cached response\r\n  const cachedResponse : HttpResponse<any> = this.cacheService.get(req.url);\r\n\r\n     //return cached response\r\n     if(cachedResponse) {\r\n       console.log(`Returning a cached Response : ${cachedResponse.url}`);\r\n       console.log(cachedResponse);\r\n       return of(cachedResponse);\r\n       console.log(\"Received all \")\r\n     }\r\n\r\n     //send request to  server and add response to cache\r\n      return next.handle(req)\r\n      .pipe(\r\n        tap(event => {\r\n          if(event instanceof HttpResponse) {\r\n            console.log(`Adding item to cache: ${req.url}`);\r\n            this.cacheService.put(req.url , event)\r\n          }\r\n        })\r\n      )\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\nimport { DataService } from 'app/core/data.service';\r\nimport { BadgeService } from 'app/core/badge.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-reader',\r\n  templateUrl: './edit-reader.component.html',\r\n  styles: [],\r\n  providers: [BadgeService]\r\n})\r\nexport class EditReaderComponent implements OnInit {\r\n\r\n  selectedReader: Reader;\r\n  currentBadge: string;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private dataService: DataService,\r\n              private badgeService: BadgeService) { }\r\n\r\n  ngOnInit() {\r\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\r\n    this.selectedReader = this.dataService.getReaderById(readerID);\r\n    this.currentBadge = this.badgeService.getReaderBadge(this.selectedReader.totalMinutesRead);\r\n  }\r\n\r\n  saveChanges() {\r\n    console.warn('Save reader not yet implemented.');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {Resolve, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport {Observable, of} from 'rxjs';\nimport {catchError} from 'rxjs/operators'\n\nimport {Book} from 'app/models/book';\nimport {DataService} from 'app/core/data.service';\nimport {BookTrackerError} from 'app/models/bookTrackerError';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksResolverService implements Resolve<Book[] | BookTrackerError> {\n\nconstructor(private dataService: DataService) { }\n\nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Book[] | BookTrackerError>{\n   return this.dataService.getAllBooks().pipe(\n     catchError(error => of(error))\n   );\n}\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\r\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\r\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\r\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\r\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\r\nimport { BooksResolverService } from './core/books-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: DashboardComponent, resolve:{ resolvedBooks: BooksResolverService} },\r\n  { path: 'addbook', component: AddBookComponent },\r\n  { path: 'addreader', component: AddReaderComponent },\r\n  { path: 'editreader/:id', component: EditReaderComponent },\r\n  { path: 'editbook/:id', component: EditBookComponent },\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}